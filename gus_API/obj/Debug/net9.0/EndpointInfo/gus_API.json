{
  "openapi": "3.0.4",
  "info": {
    "title": "Gus API",
    "version": "v1"
  },
  "paths": {
    "/api/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/auth/verifycode": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyCodeDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyCodeDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyCodeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/auth/resetlink": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmailDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/auth/resetpassword": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Profile": {
      "get": {
        "tags": [
          "Profile"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Profile/upsertDetails": {
      "put": {
        "tags": [
          "Profile"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDetailsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDetailsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserDetailsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Profile/addAdress": {
      "post": {
        "tags": [
          "Profile"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdressCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AdressCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AdressCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Profile/changeAdress/{addressId}": {
      "put": {
        "tags": [
          "Profile"
        ],
        "parameters": [
          {
            "name": "addressId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdressUpdateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AdressUpdateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AdressUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Profile/getAdress/{adressId}": {
      "get": {
        "tags": [
          "Profile"
        ],
        "parameters": [
          {
            "name": "adressId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Seller/register": {
      "post": {
        "tags": [
          "Seller"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntrepreneurDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EntrepreneurDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EntrepreneurDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Seller/toggle/{id}": {
      "post": {
        "tags": [
          "Seller"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Seller/me": {
      "get": {
        "tags": [
          "Seller"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AdressCreateDto": {
        "required": [
          "city",
          "house",
          "street"
        ],
        "type": "object",
        "properties": {
          "city": {
            "maxLength": 100,
            "minLength": 2,
            "pattern": "^[A-Za-zА-Яа-яЁё\\s\\-]+$",
            "type": "string"
          },
          "street": {
            "maxLength": 150,
            "minLength": 2,
            "type": "string"
          },
          "house": {
            "maxLength": 10,
            "minLength": 0,
            "pattern": "^[0-9A-Za-z\\-]+$",
            "type": "string"
          },
          "apartment": {
            "pattern": "^[0-9]+$",
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AdressUpdateDto": {
        "required": [
          "city",
          "house",
          "id",
          "street"
        ],
        "type": "object",
        "properties": {
          "city": {
            "maxLength": 100,
            "minLength": 2,
            "pattern": "^[A-Za-zА-Яа-яЁё\\s\\-]+$",
            "type": "string"
          },
          "street": {
            "maxLength": 150,
            "minLength": 2,
            "type": "string"
          },
          "house": {
            "maxLength": 10,
            "minLength": 0,
            "pattern": "^[0-9A-Za-z\\-]+$",
            "type": "string"
          },
          "apartment": {
            "pattern": "^[0-9]+$",
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "EmailDto": {
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          }
        },
        "additionalProperties": false
      },
      "EntrepreneurDto": {
        "required": [
          "accountNumber",
          "bik",
          "fullName",
          "inn",
          "legalAddress",
          "magazinName",
          "ogrnip",
          "shortName"
        ],
        "type": "object",
        "properties": {
          "accountNumber": {
            "minLength": 1,
            "pattern": "^\\d{20}$",
            "type": "string"
          },
          "inn": {
            "minLength": 1,
            "pattern": "^\\d{12}$",
            "type": "string"
          },
          "shortName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "bik": {
            "minLength": 1,
            "pattern": "^\\d{9}$",
            "type": "string"
          },
          "fullName": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string"
          },
          "ogrnip": {
            "minLength": 1,
            "pattern": "^\\d{15}$",
            "type": "string"
          },
          "legalAddress": {
            "maxLength": 300,
            "minLength": 0,
            "type": "string"
          },
          "magazinName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "LoginDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegisterDto": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "password": {
            "maxLength": 30,
            "minLength": 6,
            "pattern": "^[a-zA-Z0-9]*$",
            "type": "string"
          },
          "confirm": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResetPasswordDto": {
        "required": [
          "password"
        ],
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "maxLength": 30,
            "minLength": 6,
            "pattern": "^[a-zA-Z0-9]*$",
            "type": "string"
          },
          "reset": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserDetailsDto": {
        "required": [
          "firstName",
          "lastName"
        ],
        "type": "object",
        "properties": {
          "lastName": {
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^[\\p{L} \\-']+$",
            "type": "string"
          },
          "firstName": {
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^[\\p{L} \\-']+$",
            "type": "string"
          },
          "middleName": {
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^[\\p{L} \\-']*$",
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "adress": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdressUpdateDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VerifyCodeDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "Введите JWT токен в формате: Bearer {токен}",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}